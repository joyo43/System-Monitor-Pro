name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number 0.1.0'
        required: true
        default: '0.1.0'

permissions:
  contents: write
  packages: write

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-20.04, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install dependencies (Ubuntu)
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libwebkit2gtk-4.0-dev \
            libappindicator3-dev \
            librsvg2-dev \
            patchelf \
            libglib2.0-dev \
            libayatana-appindicator3-dev \
            libsoup2.4-dev \
            libjavascriptcoregtk-4.0-dev \
            libssl-dev \
            pkg-config \
            libatk1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libdbus-1-dev \
            libgpgme-dev \
            libgirepository1.0-dev

      - name: Install dependencies (macOS)
        if: matrix.platform == 'macos-latest'
        run: |
          brew update
          brew install gtk+3 gtk-mac-integration pkg-config webkitgtk glib gobject-introspection
          brew link --force gettext
          echo 'export PATH="/usr/local/opt/gettext/bin:$PATH"' >> ~/.bash_profile

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm ci

      - name: Set PKG_CONFIG_PATH for Ubuntu
        if: matrix.platform == 'ubuntu-20.04'
        run: |
          echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:/usr/lib/pkgconfig:/usr/share/pkgconfig" >> $GITHUB_ENV

      - name: Set PKG_CONFIG_PATH for macOS
        if: matrix.platform == 'macos-latest'
        run: |
          echo "PKG_CONFIG_PATH=/usr/local/lib/pkgconfig:/usr/local/opt/libffi/lib/pkgconfig" >> $GITHUB_ENV

      - name: Set release tag
        id: tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          else
            echo "tag=v${{ github.event.inputs.version || '0.1.0' }}" >> $GITHUB_OUTPUT
          fi

      - name: Build Tauri App
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: ${{ steps.tag.outputs.tag }}
          releaseName: 'System Monitor Pro ${{ steps.tag.outputs.tag }}'
          releaseBody: 'See the release assets to download for your specific platform.'
          releaseDraft: true
          prerelease: false
